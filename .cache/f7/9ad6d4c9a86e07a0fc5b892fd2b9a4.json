{"id":"js/models/Search.js","dependencies":[{"name":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\.babelrc","includedInParent":true,"mtime":1587811826395},{"name":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\package.json","includedInParent":true,"mtime":1587812586617},{"name":"babel-polyfill","loc":{"line":1,"column":7},"parent":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\src\\js\\models\\Search.js","resolved":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\node_modules\\babel-polyfill\\lib\\index.js"},{"name":"../views/searchView","loc":{"line":2,"column":28},"parent":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\src\\js\\models\\Search.js","resolved":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\src\\js\\views\\searchView.js"},{"name":"../views/base","loc":{"line":3,"column":23},"parent":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\src\\js\\models\\Search.js","resolved":"C:\\Users\\Goergi\\Desktop\\recipeSearch\\src\\js\\views\\base.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"babel-polyfill\");\n\nvar searchView = _interopRequireWildcard(require(\"../views/searchView\"));\n\nvar _base = require(\"../views/base\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Search = /*#__PURE__*/function () {\n  function Search(query) {\n    _classCallCheck(this, Search);\n\n    this.query = query;\n  }\n\n  _createClass(Search, [{\n    key: \"getResults\",\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"https://api.spoonacular.com/recipes/search?apiKey=\".concat(_base.apiKey, \"&query=\").concat(this.query, \"&number=30\"));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n                this.baseUri = data.baseUri;\n                this.results = data.results;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function getResults() {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }, {\n    key: \"autocompleteSearch\",\n    value: function () {\n      var _autocompleteSearch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch(\"https://api.spoonacular.com/recipes/autocomplete?apiKey=\".concat(_base.apiKey, \"&number=5&query=\").concat(this.query));\n\n              case 3:\n                res = _context2.sent;\n                _context2.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context2.sent;\n                searchView.renderListAutocomplete(data);\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function autocompleteSearch() {\n        return _autocompleteSearch.apply(this, arguments);\n      }\n\n      return autocompleteSearch;\n    }()\n  }]);\n\n  return Search;\n}();\n\nexports.default = Search;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/models/Search.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"js/models/Search.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"js/models/Search.js","original":{"line":3,"column":0}},{"name":"Search","generated":{"line":28,"column":4},"source":"js/models/Search.js","original":{"line":5,"column":21}},{"generated":{"line":29,"column":0},"source":"js/models/Search.js","original":{"line":6,"column":4}},{"name":"query","generated":{"line":29,"column":18},"source":"js/models/Search.js","original":{"line":6,"column":16}},{"generated":{"line":29,"column":23},"source":"js/models/Search.js","original":{"line":6,"column":4}},{"generated":{"line":29,"column":25},"source":"js/models/Search.js","original":{"line":6,"column":23}},{"generated":{"line":30,"column":0},"source":"js/models/Search.js","original":{"line":6,"column":23}},{"generated":{"line":32,"column":0},"source":"js/models/Search.js","original":{"line":7,"column":8}},{"name":"query","generated":{"line":32,"column":9},"source":"js/models/Search.js","original":{"line":7,"column":13}},{"generated":{"line":32,"column":14},"source":"js/models/Search.js","original":{"line":7,"column":8}},{"name":"query","generated":{"line":32,"column":17},"source":"js/models/Search.js","original":{"line":7,"column":21}},{"generated":{"line":32,"column":22},"source":"js/models/Search.js","original":{"line":7,"column":8}},{"generated":{"line":33,"column":0},"source":"js/models/Search.js","original":{"line":8,"column":5}},{"name":"fetch","generated":{"line":46,"column":23},"source":"js/models/Search.js","original":{"line":12,"column":28}},{"generated":{"line":46,"column":28},"source":"js/models/Search.js","original":{"line":12,"column":33}},{"name":"apiKey","generated":{"line":46,"column":89},"source":"js/models/Search.js","original":{"line":12,"column":87}},{"generated":{"line":46,"column":101},"source":"js/models/Search.js","original":{"line":12,"column":33}},{"generated":{"line":46,"column":121},"source":"js/models/Search.js","original":{"line":12,"column":103}},{"name":"query","generated":{"line":46,"column":126},"source":"js/models/Search.js","original":{"line":12,"column":108}},{"generated":{"line":46,"column":131},"source":"js/models/Search.js","original":{"line":12,"column":33}},{"name":"res","generated":{"line":49,"column":0},"source":"js/models/Search.js","original":{"line":12,"column":16}},{"name":"res","generated":{"line":49,"column":16},"source":"js/models/Search.js","original":{"line":12,"column":16}},{"name":"res","generated":{"line":51,"column":23},"source":"js/models/Search.js","original":{"line":13,"column":29}},{"generated":{"line":51,"column":26},"source":"js/models/Search.js","original":{"line":13,"column":32}},{"name":"json","generated":{"line":51,"column":27},"source":"js/models/Search.js","original":{"line":13,"column":33}},{"generated":{"line":51,"column":31},"source":"js/models/Search.js","original":{"line":13,"column":29}},{"name":"data","generated":{"line":54,"column":0},"source":"js/models/Search.js","original":{"line":13,"column":16}},{"name":"data","generated":{"line":54,"column":16},"source":"js/models/Search.js","original":{"line":13,"column":16}},{"generated":{"line":55,"column":0},"source":"js/models/Search.js","original":{"line":14,"column":12}},{"name":"baseUri","generated":{"line":55,"column":21},"source":"js/models/Search.js","original":{"line":14,"column":17}},{"generated":{"line":55,"column":28},"source":"js/models/Search.js","original":{"line":14,"column":12}},{"name":"data","generated":{"line":55,"column":31},"source":"js/models/Search.js","original":{"line":14,"column":27}},{"generated":{"line":55,"column":35},"source":"js/models/Search.js","original":{"line":14,"column":31}},{"name":"baseUri","generated":{"line":55,"column":36},"source":"js/models/Search.js","original":{"line":14,"column":32}},{"generated":{"line":55,"column":43},"source":"js/models/Search.js","original":{"line":14,"column":12}},{"generated":{"line":56,"column":0},"source":"js/models/Search.js","original":{"line":15,"column":12}},{"name":"results","generated":{"line":56,"column":21},"source":"js/models/Search.js","original":{"line":15,"column":17}},{"generated":{"line":56,"column":28},"source":"js/models/Search.js","original":{"line":15,"column":12}},{"name":"data","generated":{"line":56,"column":31},"source":"js/models/Search.js","original":{"line":15,"column":27}},{"generated":{"line":56,"column":35},"source":"js/models/Search.js","original":{"line":15,"column":31}},{"name":"results","generated":{"line":56,"column":36},"source":"js/models/Search.js","original":{"line":15,"column":32}},{"generated":{"line":56,"column":43},"source":"js/models/Search.js","original":{"line":15,"column":12}},{"name":"console","generated":{"line":63,"column":0},"source":"js/models/Search.js","original":{"line":18,"column":12}},{"name":"console","generated":{"line":63,"column":16},"source":"js/models/Search.js","original":{"line":18,"column":12}},{"generated":{"line":63,"column":23},"source":"js/models/Search.js","original":{"line":18,"column":19}},{"name":"log","generated":{"line":63,"column":24},"source":"js/models/Search.js","original":{"line":18,"column":20}},{"generated":{"line":63,"column":27},"source":"js/models/Search.js","original":{"line":18,"column":12}},{"name":"fetch","generated":{"line":90,"column":23},"source":"js/models/Search.js","original":{"line":24,"column":28}},{"generated":{"line":90,"column":28},"source":"js/models/Search.js","original":{"line":24,"column":33}},{"name":"apiKey","generated":{"line":90,"column":95},"source":"js/models/Search.js","original":{"line":24,"column":93}},{"generated":{"line":90,"column":107},"source":"js/models/Search.js","original":{"line":24,"column":33}},{"generated":{"line":90,"column":136},"source":"js/models/Search.js","original":{"line":24,"column":118}},{"name":"query","generated":{"line":90,"column":141},"source":"js/models/Search.js","original":{"line":24,"column":123}},{"generated":{"line":90,"column":146},"source":"js/models/Search.js","original":{"line":24,"column":33}},{"name":"res","generated":{"line":93,"column":0},"source":"js/models/Search.js","original":{"line":24,"column":16}},{"name":"res","generated":{"line":93,"column":16},"source":"js/models/Search.js","original":{"line":24,"column":16}},{"name":"res","generated":{"line":95,"column":23},"source":"js/models/Search.js","original":{"line":25,"column":29}},{"generated":{"line":95,"column":26},"source":"js/models/Search.js","original":{"line":25,"column":32}},{"name":"json","generated":{"line":95,"column":27},"source":"js/models/Search.js","original":{"line":25,"column":33}},{"generated":{"line":95,"column":31},"source":"js/models/Search.js","original":{"line":25,"column":29}},{"name":"data","generated":{"line":98,"column":0},"source":"js/models/Search.js","original":{"line":25,"column":16}},{"name":"data","generated":{"line":98,"column":16},"source":"js/models/Search.js","original":{"line":25,"column":16}},{"name":"searchView","generated":{"line":99,"column":0},"source":"js/models/Search.js","original":{"line":26,"column":12}},{"name":"searchView","generated":{"line":99,"column":16},"source":"js/models/Search.js","original":{"line":26,"column":12}},{"generated":{"line":99,"column":26},"source":"js/models/Search.js","original":{"line":26,"column":22}},{"name":"renderListAutocomplete","generated":{"line":99,"column":27},"source":"js/models/Search.js","original":{"line":26,"column":23}},{"generated":{"line":99,"column":49},"source":"js/models/Search.js","original":{"line":26,"column":12}},{"name":"data","generated":{"line":99,"column":50},"source":"js/models/Search.js","original":{"line":26,"column":46}},{"generated":{"line":99,"column":54},"source":"js/models/Search.js","original":{"line":26,"column":12}},{"name":"console","generated":{"line":106,"column":0},"source":"js/models/Search.js","original":{"line":29,"column":12}},{"name":"console","generated":{"line":106,"column":16},"source":"js/models/Search.js","original":{"line":29,"column":12}},{"generated":{"line":106,"column":23},"source":"js/models/Search.js","original":{"line":29,"column":19}},{"name":"log","generated":{"line":106,"column":24},"source":"js/models/Search.js","original":{"line":29,"column":20}},{"generated":{"line":106,"column":27},"source":"js/models/Search.js","original":{"line":29,"column":12}}],"sources":{"js/models/Search.js":"import \"babel-polyfill\";\r\nimport * as searchView from '../views/searchView';\r\nimport { apiKey } from '../views/base';\r\n\r\nexport default class Search {\r\n    constructor(query) {\r\n        this.query = query;\r\n    }\r\n\r\n    async getResults() {\r\n        try {\r\n            let res = await fetch(`https://api.spoonacular.com/recipes/search?apiKey=${apiKey}&query=${this.query}&number=30`);\r\n            let data = await res.json();\r\n            this.baseUri = data.baseUri;\r\n            this.results = data.results;\r\n\r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n    }\r\n\r\n    async autocompleteSearch() {\r\n        try {\r\n            let res = await fetch(`https://api.spoonacular.com/recipes/autocomplete?apiKey=${apiKey}&number=5&query=${this.query}`);\r\n            let data = await res.json();\r\n            searchView.renderListAutocomplete(data);\r\n            \r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"361e14613b767efb03e81347616ace97","cacheData":{"env":{}}}